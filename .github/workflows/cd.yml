name: 'Continuous Delivery'
on:
  push:
    branches:
      - main

jobs:
  tests:
    name: "Test"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: inductor
          POSTGRES_USER: inductor
          POSTGRES_DB: inductor
        ports:
          - 9999:5432


    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Expose GIT Commit Data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Install NodeJS 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Load the Cached Dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install

      - name: Test > Types
        run: yarn test:types

      - name: Build
        run: yarn build

      - name: Test > Postgres
        run: yarn test
        env:
          CI: true

    outputs:
      commit_message: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}

  # Run publish only when the branch is matches, and the commit message could match a release pattern.
  publish:
    name: Publish Packages
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ startsWith(needs.tests.outputs.commit_message, 'Release') && success() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install NodeJS 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          always-auth: true
          cache: yarn

      - name: Load the Cached Dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to NPM
        id: npm-publish
        uses: pascalgn/npm-publish-action@1.3.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Change Yarn for GitHub Package Registry (GPR)
        if: ${{ steps.npm-publish.outputs.changed == 'true' }}
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: 'https://npm.pkg.github.com'
          scope: '@hisorange'
          cache: yarn

      - name: Publish to GPR
        if: ${{ steps.npm-publish.outputs.changed == 'true' }}
        run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      changed: ${{ steps.npm-publish.outputs.changed == 'true' }}
      version: ${{ steps.npm-publish.outputs.version }}

  release:
    name: Release GH
    runs-on: ubuntu-latest
    needs: [tests, publish]
    if: ${{ success() && needs.publish.outputs.changed == 'true' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.publish.outputs.version }}
        tag_name: ${{ needs.publish.outputs.version }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
